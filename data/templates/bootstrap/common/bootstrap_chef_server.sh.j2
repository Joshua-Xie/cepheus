#!/bin/bash
#
# Author: Chris Jones <chris.jones@lambdastack.io>
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This script bootstraps Chef on the bootstrap node.
# NOTE: This file gets generated in the data center specific folder like dc1 or dc2. That's where it should be launched

REPO_ROOT=/ceph-host
REPO_ROOT_FILES=/ceph-files

{% if os.type == "rhel" %}
# To make this less steps go ahead do a yum update first
status=$(sudo subscription-manager status | awk -F":" '{print $2}' | grep Current)
if [[ -z $status ]]; then
  sudo /tmp/rhelsub.sh
fi
{% endif %}

# NOTE: Because the operations key *may* contain a security phrase, we will temporarily move it so that Chef uses the
# password instead. After the run the key will be moved back.
mv $HOME/.ssh/id_rsa $HOME/.ssh/id_rsa.tmp

set -e

source $REPO_ROOT/bootstrap/common/base.sh

export CEPH_CHEF_BOOTSTRAP={{ bootstrap.name }}
export CEPH_CHEF_BOOTSTRAP_IP={{ bootstrap.ip }}

# Check to see if Chef Server is installed
set +e
{% if os.type != "ubuntu" %}
chef_server=$(rpm -qa | grep chef-server)
{% else %}
chef-server="<put ubuntu code here>"
{% endif %}
set -e

#### NOTE: You can check to see if user 'admin' exists and if org 'cepheus' exists but this is usually only called once.
# If you *have* to run this again then simply just comment one or both of these lines out before running.
if [[ -z $chef_server ]]; then
  echo "nginx['non_ssl_port'] = 4000" | sudo tee /etc/opscode/chef-server.rb
  echo "nginx['enable_non_ssl'] = true" | sudo tee --append /etc/opscode/chef-server.rb

  sudo chef-server-ctl reconfigure

  sudo chef-server-ctl user-create admin admin admin admin@localhost.com welcome --filename /etc/opscode/admin.pem
  sudo chef-server-ctl org-create cepheus cepheus --association admin --filename /etc/opscode/cepheus-validator.pem

  sudo chmod 0644 /etc/opscode/admin.pem /etc/opscode/cepheus-validator.pem
fi
####

mkdir -p $HOME/.chef
echo -e "knife[:bootstrap_install_command] = 'sudo rpm -Uvh $REPO_ROOT_FILES/$CHEF_CLIENT_RPM'\nchef_server_url 'https://$CEPH_CHEF_BOOTSTRAP/organizations/cepheus'\nvalidation_client_name 'cepheus-validator'\nvalidation_key '/etc/opscode/cepheus-validator.pem'\nnode_name 'admin'\nclient_key '/etc/opscode/admin.pem'\nknife['editor'] = 'vim'\ncookbook_path [ \"/home/{{ primary_user.name }}/cepheus/cookbooks\" ]" > $HOME/.chef/knife.rb
$KNIFE ssl fetch

$KNIFE bootstrap $CEPH_CHEF_BOOTSTRAP_IP -x {{ primary_user.name }} $CEPH_CHEF_BOOTSTRAP -P {{ primary_user.name }} --sudo

cd $HOME && rsync -a $REPO_ROOT/* ./cepheus

# Add the dependency cookbooks from the file cache
echo "Checking on dependency for cookbooks..."
sudo cp $REPO_ROOT_FILES/cookbooks/*.tar.gz $HOME/cepheus/cookbooks
cd $HOME/cepheus/cookbooks && ls -1 *.tar.gz | xargs -I% sudo tar xvzf %
cd $HOME/cepheus/cookbooks && sudo rm -f *.tar.gz

# NOTE: *HAVE* to load the files into files/ before cookbook upload
sudo cp $REPO_ROOT_FILES/cobbler/loaders/* $HOME/cepheus/cookbooks/cepheus/files/loaders
sudo chown -R {{ primary_user.name }}:{{ primary_user.name }} $HOME/cepheus

# Add chef info to boostrap node.
$KNIFE cookbook upload -a
cd $HOME/cepheus/roles && $KNIFE role from file *.json
cd $HOME/cepheus/environments && $KNIFE environment from file {{ environment }}.json

$KNIFE node run_list set $CEPH_CHEF_BOOTSTRAP 'role[ceph-bootstrap]' $CHEF_KNIFE_DEBUG
$KNIFE node environment set $CEPH_CHEF_BOOTSTRAP {{ environment }} $CHEF_KNIFE_DEBUG
$KNIFE tag create $CEPH_CHEF_BOOTSTRAP 'ceph-bootstrap' $CHEF_KNIFE_DEBUG

mv /home/{{ primary_user.name }}/.ssh/id_rsa.tmp /home/{{ primary_user.name }}/.ssh/id_rsa

sudo chef-client
