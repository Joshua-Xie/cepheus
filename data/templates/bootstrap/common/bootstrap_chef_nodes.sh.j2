#!/bin/bash
#
# Author: Chris Jones <chris.jones@lambdastack.io>
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

REPO_ROOT=$1
REPO_ROOT=${REPO_ROOT:-"{{ cache.repo }}"}
# KNIFE=/opt/opscode/embedded/bin/knife

if [ -n "$CEPH_CHEF_HTTP_PROXY" ]; then
    KNIFE_HTTP_PROXY_PARAM="--bootstrap-proxy \$http_proxy"
fi

$REPO_ROOT/bootstrap/common/base.sh
$REPO_ROOT/bootstrap/common/base_colors.sh

set -e

# Disable known_host check
export ANSIBLE_HOST_KEY_CHECKING=False

# Not using Ansible Playbooks since we are only orchestrating Chef
echo_yellow "====> Copying {{ cache.base }}.tar.gz to nodes..."
ansible "all:!{{ bootstrap.name }}" -m copy -a "src=/home/{{ primary_user.name }}{{ cache.base }}.tar.gz dest=/home/{{ primary_user.name }}{{ cache.base }}.tar.gz"

echo_yellow "====> Copying /etc/hosts to nodes..."
# /etc/hosts should have been updated in bootstrap_init.sh for the initial run
ansible "all:!{{ bootstrap.name }}" -m copy -b -a "src=/etc/hosts dest=/etc/hosts"

echo_yellow "====> Setting up {{ cache.base }}.tar.gz on nodes..."
ansible "all:!{{ bootstrap.name }}" -m shell -a "cd /home/{{ primary_user.name }} && tar xzf *.tar.gz"
ansible "all:!{{ bootstrap.name }}" -m shell -b -a "mkdir -p {{ cache.base }} && chown -R {{ primary_user.name }}:{{ primary_user.name }} {{ cache.base }}"
ansible "all:!{{ bootstrap.name }}" -m shell -a "cp -r /home/{{ primary_user.name }}{{ cache.base }}/* {{ cache.base }}/. && rm -rf /home/{{ primary_user.name }}{{ cache.base }} && rm -f /home/{{ primary_user.name }}{{ cache.base }}.tar.gz"

echo_yellow "====> Bootstrapping Chef Client on nodes..."
{% for node in inventory.nodes %}
{# Don't want bootstrap node since that was done in bootstrap_chef_server #}
{% if node.name != boostrap.name %}
# TODO: Add bootstrap proxy option...
$KNIFE bootstrap {{ node.bootstrap_ip }} -N {{ node.name }} -x {{ primary_user.name }} -i {{ primary_user.key.path }}/{{ primary_user.key.private }} --sudo --yes
{% endif %}
{% endfor %}

echo_yellow "====> Installing Ceph-Chef gem requirements..."
{% for gem in ceph_chef.gems %}
ansible "all:!{{ bootstrap.name }}" -m copy -a "src={{ cache.base }}/gems/{{ gem.name }}-{{ gem.version }}.gem dest=/tmp/{{ gem.name }}-{{ gem.version }}.gem"
ansible "all:!{{ bootstrap.name }}" -m shell -b -a "/opt/chef/embedded/bin/gem install --force --local /tmp/{{ gem.name }}-{{ gem.version }}.gem"
{% endfor %}

ansible "all:!{{ bootstrap.name }}" -m shell -b -a "chef-client"
