#!/bin/bash
#
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This is for situations where you have a partial setup on something and you want to override the default
# 'set -e' option. Put here so it's easy to see but the condition is further down after basic tests are performed.
# This allows you to pass anything in after the script in question which means you're making a decision to override
# the default of erroring out on anything that comes up such as 'already installed' etc. If nothing is passed in
# then the default is assumed.
# Note: This setting is only valid until something downstream (another script) overrides it.
set -e

export REPO_ROOT="/home/{{ primary_user.name }}/cepheus"
if [[ ! -f $REPO_ROOT ]]; then
    echo "$REPO_ROOT has not been created yet."
    exit 0
fi

# It's ok to let this go through because the bootstrap node will not have these generated until AFTER the Chef Server
# is installed, started and the bootstrap role runs.
# CEPH_CHEF_HOSTS=( ceph-bootstrap )

if [[ -f $REPO_ROOT/environments/ceph_chef_bootstrap.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_bootstrap.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_osd_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_osd_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_mon_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_mon_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_rgw_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_rgw_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_admin_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_admin_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_adc_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_adc_hosts.env
fi

# This script does a lot of stuff:
# - installs Chef Server on the ceph-bootstrap node
# - installs Chef client on all nodes

# It would be more efficient as something executed in one shot on each node, but
# doing it this way makes it easy to orchestrate operations between nodes. It will be
# overhauled at some point to not be Vagrant-specific.

# NOTE: You could check to see if node IP == bootstrap IP and if so then don't ssh or just have the key :)

do_on_node() {
  echo
  echo "Issuing command: ssh $1 ${2}"
  echo "----------------------------------------------------------------------------------------"
  NODE=$1
  shift
  COMMAND="${*}"
  ssh -t -o StrictHostKeyChecking=no {{ primary_user.name }}@$NODE "$COMMAND"
}

# use Chef Server embedded knife instead of the one in /usr/bin
KNIFE=/opt/opscode/embedded/bin/knife

# Did not call the remove_array_element from bash_functions.sh here because we don't want to modify the CEPH_CHEF_HOSTS
delete=($CEPH_CHEF_BOOTSTRAP)
ceph_nodes=("${CEPH_CHEF_HOSTS[@]/$delete}")

if [[ $DONT_SHOW_BANNER -eq 0 ]]; then
    echo
    echo "##########"
    echo "Root: $REPO_ROOT"
    echo "Cepheus Bootstrap: $CEPH_CHEF_BOOTSTRAP"
    echo "Ceph Nodes: ${ceph_nodes[@]}"
    echo "##########"
    echo
fi
