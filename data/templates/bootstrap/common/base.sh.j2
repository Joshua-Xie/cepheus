#!/bin/bash
#
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

REPO_ROOT="/home/{{ primary_user.name }}/cepheus"

# use Chef Server embedded knife instead of the one in /usr/bin
export KNIFE=/opt/opscode/embedded/bin/knife

# These two are residuals from previous versions. They can go away later...
export CHEF_CLIENT_DEBUG=
export CHEF_KNIFE_DEBUG=

# If DONT_SHOW_BANNER is not set then default it to 0
DONT_SHOW_BANNER=${DONT_SHOW_BANNER:-1}

if [[ ! -f $REPO_ROOT/bootstrap/common/base_colors.sh ]]; then
    REPO_ROOT=$(git rev-parse --show-toplevel)
    if [[ $? -ne 0 ]]; then
        REPO_ROOT=`pwd`
    fi
fi

source $REPO_ROOT/bootstrap/common/base_colors.sh

if [[ ! -d $REPO_ROOT ]]; then
    echo_red "$REPO_ROOT has not been created yet. Success (exit)."
    echo
    exit 1
fi

set -e

# It's ok to let this go through because the bootstrap node will not have these generated until AFTER the Chef Server
# is installed, started and the bootstrap role runs.
# CEPH_CHEF_HOSTS=( ceph-bootstrap )

if [[ -f $REPO_ROOT/environments/ceph_chef_bootstrap.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_bootstrap.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_osd_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_osd_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_mon_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_mon_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_mds_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_mds_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_rgw_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_rgw_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_admin_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_admin_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_adc_hosts.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_adc_hosts.env
fi

if [[ -f $REPO_ROOT/environments/ceph_chef_proxy.env ]]; then
    source $REPO_ROOT/environments/ceph_chef_proxy.env
fi

# This script does a lot of stuff:
# - installs Chef Server on the ceph-bootstrap node
# - installs Chef client on all nodes

# It would be more efficient as something executed in one shot on each node, but
# doing it this way makes it easy to orchestrate operations between nodes. It will be
# overhauled at some point to not be Vagrant-specific.

# NOTE: You could check to see if node IP == bootstrap IP and if so then don't ssh or just have the key :)

do_on_node() {
  echo
  echo_green "Issuing command: ssh $1 ${2}"
  echo_green "----------------------------------------------------------------------------------------"
  NODE=$1
  shift
  COMMAND="${*}"
  ssh -t -o StrictHostKeyChecking=no {{ primary_user.name }}@$NODE "$COMMAND"
}

# Did not call the remove_array_element from bash_functions.sh here because we don't want to modify the CEPH_CHEF_HOSTS
delete=($CEPH_CHEF_BOOTSTRAP)
export CEPH_NODES=("${CEPH_CHEF_HOSTS[@]/$delete}")

if [[ $DONT_SHOW_BANNER -eq 0 ]]; then
    echo
    echo_yellow "##########"
    echo_yellow "Root: $REPO_ROOT"
    echo_yellow "Cepheus Bootstrap: $CEPH_CHEF_BOOTSTRAP"
    echo_yellow "Ceph Nodes: ${CEPH_NODES[@]}"
    echo_yellow "##########"
    echo
fi
