#!/bin/bash
#
# Author: Chris Jones <chris.jones@lambdastack.io>
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
set -e

REPO_ROOT={{ cache.repo }}
REPO_ROOT_FILES={{ cache.base }}

DATE=$1
VERSION=$2

source $REPO_ROOT/bootstrap/common/base_colors.sh

if [[ -z $DATE ]]; then
  DATE=$(date +%Y-%m-%d_%H:%M:%S)
fi

if [[ -z $VERSION ]]; then
    if [[ -f {{ build.base }}/cookbooks/cepheus/metadata.rb ]]; then
        VERSION=$(grep version {{ build.base }}/cookbooks/cepheus/metadata.rb | awk '{print $2}' | sed "s/'//g")
    else
        VERSION="0.0.0"
    fi
fi

CLUSTER={{ data_center }}
CEPH_CHEF_BOOTSTRAP={{ bootstrap.name }}

echo_light_red "====> Backing up Chef Server..."

# NB: Change to template driven...
mkdir -p {{ backup.cepheus }}/{dc1,dc2}
mkdir -p {{ backup.chef }}/{dc1,dc2}
# back up Chef server assets per Chef documentation at
# https://docs.chef.io/server_backup_restore.html

CHEF_PG_DUMPALL=/opt/opscode/embedded/bin/pg_dumpall
CHEF_SERVER_BACKUP_PATH={{ backup.chef }}

echo_orange ">>>> Note: Chef Server will sometimes fail to backup. Simply start this script over again! <<<<"
PG_BACKUP_TMP=/tmp/chef-pgsql-$VERSION-$DATE.sql.bz2
sudo -E -u opscode-pgsql $CHEF_PG_DUMPALL -c | bzip2 > $PG_BACKUP_TMP
mv $PG_BACKUP_TMP $CHEF_SERVER_BACKUP_PATH

sudo tar cjf $CHEF_SERVER_BACKUP_PATH/etc-opscode-$VERSION-$DATE.tar.bz2 /etc/opscode 2>/dev/null
sudo tar cjf $CHEF_SERVER_BACKUP_PATH/var-opt-opscode-$VERSION-$DATE.tar.bz2 /var/opt/opscode 2>/dev/null

logger -t CepheusBackup "Cepheus Chef Server backed up - $VERSION-$DATE"

echo_light_red "====> Rsync Chef Server Backups..."

rsync -avz $CHEF_SERVER_BACKUP_PATH/. {{ primary_user.name }}@{{ primary_user.backup.remote.host }}:$CHEF_SERVER_BACKUP_PATH/.

logger -t CepheusBackup "Cepheus Chef Server backup rsync to $REMOTE_CLUSTER for $VERSION-$DATE"

####################

# Make backup of current "ceph-host" and "cepheus" version
if [[ -d $REPO_ROOT ]]; then
    if [[ $(ls -A $REPO_ROOT) ]]; then
        echo_light_red "====> Backing up $REPO_ROOT..."
        mkdir -p {{ backup.cepheus }}/ceph-host-$VERSION-$DATE
        cp -r $REPO_ROOT/* {{ backup.cepheus }}/ceph-host-$VERSION-$DATE
        tar -cjf {{ backup.cepheus }}/ceph-host-$VERSION-$DATE-$CLUSTER.tar.bz2 {{ backup.cepheus }}/ceph-host-$VERSION-$DATE 2>/dev/null
        sudo rm -rf {{ backup.cepheus }}/ceph-host-$VERSION-$DATE
    fi
fi

if [[ -d {{ build.base }} ]]; then
    if [[ $(ls -A {{ build.base }}) ]]; then
        echo_light_red "====> Backing up $HOME/cepheus..."
        mkdir -p {{ backup.cepheus }}/cepheus-$VERSION-$DATE
        cp -r {{ build.base }}/* {{ backup.cepheus }}/cepheus-$VERSION-$DATE
        tar -cjf {{ backup.cepheus }}/ceph-cepheus-$VERSION-$DATE-$CLUSTER.tar.bz2 {{ backup.cepheus }}/cepheus-$VERSION-$DATE 2>/dev/null
        sudo rm -rf {{ backup.cepheus }}/cepheus-$VERSION-$DATE
    fi
fi

sudo chown -R {{ primary_user.name }}:{{ primary_user.name }} {{ backup.base }}/cepheus/

# Backup supporting files - These are the same for ALL clusters so no need to rsync
if [[ -d $REPO_ROOT_FILES ]]; then
    if [[ $(ls -A $REPO_ROOT_FILES) ]]; then
        echo_light_red "====> Backing up $REPO_ROOT_FILES..."
        mkdir -p {{ backup.files }}/$VERSION-$DATE
        cp -r $REPO_ROOT_FILES/* {{ backup.files }}/$VERSION-$DATE
        tar -cjf {{ backup.files }}/cepheus-files-$VERSION-$DATE.tar.bz2 {{ backup.files }}/$VERSION-$DATE 2>/dev/null
        sudo rm -rf {{ backup.files }}/$VERSION-$DATE
    fi
fi

sudo chown -R {{ primary_user.name }}:{{ primary_user.name }} {{ backup.files }}

echo_light_red "====> Rsync cepheus to {{ primary_user.backup.remote.host }}..."
rsync -avz {{ backup.cepheus }}/. {{ primary_user.name }}@{{ primary_user.backup.remote.host }}:{{ backup.cepheus }}/.

echo
echo_green "====> cepheus_backup_rsync.sh - Complete <===="
echo
