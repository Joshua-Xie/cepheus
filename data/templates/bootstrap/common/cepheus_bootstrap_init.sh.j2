#!/bin/bash
#
# Author: Chris Jones <chris.jones@lambdastack.io>
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NB: PXE_BOOT would normally do all of this.
# NB: The initial bootstrap process: Chef Server and Chef Clients are installed and setup along with everything else.
# NB: Setup sudoers, users, dependencies needed for Chef and Ansible etc...

set -e

{% if os.type != "ubuntu" %}
yum install -y kernel-devel-`uname -r` gcc make perl bzip2
yum install -y epel-release rsync vim git wget curl
yum install -y python-pip python-jinja2 PyYAML
yum install -y ipmitool yum-utils createrepo ntp tmux
{%- endif %}

{%- for user in users %}

found=$(grep {{ user.name }} /etc/passwd)
if [[ $? -ne 0 ]]; then
    echo "====> Adding user $user"
    useradd {{ user.name }} -g {{ user.group }} -p {{ user.passwd }}
fi

{%- endfor %}

found=$(grep "{{ primary_user.name }}:" /etc/group)
if [[ $? -ne 0 ]]; then
    echo "====> Adding group for  {{ primary_user.name }}"
    groupadd {{ primary_user.name }}
fi

found=$(grep wheel /etc/group | grep {{ primary_user.name }})
if [[ $? -ne 0 ]]; then
    echo "====> Modifying user {{ primary_user.name }}"
    usermod -a -G wheel,{{ primary_user.name }} {{ primary_user.name }}
fi

if [[ ! -d /home/{{ primary_user.name }}/.ssh ]]; then
    mkdir --mode=0700 -p /home/{{ primary_user.name }}/.ssh

cat <<EOM >/home/{{ primary_user.name }}/.ssh/authorized_keys
{{ primary_user.key }}
EOM

    # This needs to change...
    cp /ceph-host/bootstrap/data/environment/{{ environment }}/{{ primary_user.private_key }} /home/{{ primary_user.name }}/.ssh/id_rsa

    chmod 0600 /home/{{ primary_user.name }}/.ssh/authorized_keys
    chmod 0600 /home/{{ primary_user.name }}/.ssh/id_rsa
    chown -R {{ primary_user.name }}:{{ primary_user.group }} /home/{{ primary_user.name }}/.ssh
fi

# Setup sudoer
if [[ ! -f /etc/sudoers.d/{{ primary_user.name }} ]]; then
    echo "====> Updating sudoer for {{ primary_user.name }}"

    echo "%{{ primary_user.name }} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/{{ primary_user.name }}
    sed -i "s/^[^#].*requiretty/#Defaults requiretty/" /etc/sudoers
    echo "{{ primary_user.name }} ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/{{ primary_user.name }}
fi

{%- if subscription.enable %}
{{ subscription.commands.C1 }}
{{ subscription.commands.C2 }}
{{ subscription.commands.C3 }}
# Go ahead and create a script in /tmp if the network has issues during the process.
cat <<EOM >/tmp/rhelsub.sh
# service network restart
{{ subscription.commands.C1 }}
{{ subscription.commands.C2 }}
{{ subscription.commands.C3 }}
yum update -y
EOM
chmod +x /tmp/rhelsub.sh
{%- endif %}

# May need to do something with NICs here since some require a little extra love before they are happy!

echo "===> cepheus_bootstrap_init.sh Success!"
echo
