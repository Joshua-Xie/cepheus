#!/bin/bash
#
# Copyright 2017, LambdaStack
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NOTE: AUTOGENERATED FILE. Only modify template version.

# Creates the REPO_ROOT env var for everything else to use...
# If already set before this it will use it.
REPO_ROOT=${REPO_ROOT:-$(git rev-parse --show-toplevel 2>/dev/null)}
# Just in the event it needs to run not being in a git repo directory...
export REPO_ROOT=${REPO_ROOT:-"{{ cache.repo }}"}

# Exit immediately if anything goes wrong!
set -eu

source $REPO_ROOT/bootstrap/common/base_colors.sh

# Builds the bootstrapping environment based on the templates and data found in this directory.

# NB: Output directories for this process already exists
# NB: The `build.yaml` will get created by combining all of the required yamls.

sed '/---/d' $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/environment.yaml >> $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml

# Build from other data files listed in the environment.yaml.
# Pass the data files through the template engine first.
echo_yellow "====> Data_files being processed..."

# NOTE: Take a look at running these through the template_engine twice!!!!!!
# TODO: Check files...

{%- for item in data_files %}
# Check data center folder first else use location specific version...
if [[ -f $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }} ]]; then
    # Double check to make sure template there are no 'template' residuals remaining
    echo_orange "Checking 1 - $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }}"
    set +e
    J2=$(grep {% raw %}"{%"{% endraw %} $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }})
    if [[ -z $J2 ]]; then
        J2=$(grep {% raw %}"{{"{% endraw %} $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }})
    fi
    set -e
    if [[ ! -z $J2 ]]; then
        $REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }} -o $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }}
    fi
    sed '/---/d' $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }} >> $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml
else
    # Double check to make sure template there are no 'template' residuals remaining

    # TODO: $BUILD_LOCATION/ was removed from 'data/$BUILD_LOCATION/' and common was added - Remove this comment after testing...

    echo_orange "Checking 0 - $REPO_ROOT/data/common/{{ item }}"
    set +e
    J2=$(grep {% raw %}"{%"{% endraw %} $REPO_ROOT/data/common/{{ item }})
    if [[ -z $J2 ]]; then
        J2=$(grep {% raw %}"{{"{% endraw %} $REPO_ROOT/data/common/{{ item }})
    fi
    set -e
    if [[ ! -z $J2 ]]; then
        # Go ahead and move the output to the 'data' folder to be used since it's modified...
        $REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/data/common/{{ item }} -o $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/{{ item }}
        sed '/---/d' $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/data/common/{{ item }} >> $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml
    else
        sed '/---/d' $REPO_ROOT/data/common/{{ item }} >> $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml
    fi
fi

{%- endfor %}

# Process any environment_files
echo_yellow "====> Environment_files being processed..."
{%- for item in environment_files %}

echo_yellow "====> Generating {{ item }}..."
$REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/data/templates/{{ item }}.j2 -o $REPO_ROOT/{{ item }}
# NB: Run through template_engine twice
$REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/{{ item }} -o $REPO_ROOT/{{ item }}
sudo chmod +x $REPO_ROOT/{{ item }}

{%- endfor %}

# Process any cookbooks_files
echo_yellow "====> Cookbooks_files being processed..."
{%- for item in cookbooks_files %}

echo_yellow "====> Generating {{ item }}..."
$REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/data/templates/{{ item }}.j2 -o $REPO_ROOT/{{ item }}
# NB: Run through template_engine twice
$REPO_ROOT/data/templates/template_engine -d $REPO_ROOT/data/$BUILD_LOCATION/$BUILD_DATA_CENTER/build.yaml -i $REPO_ROOT/{{ item }} -o $REPO_ROOT/{{ item }}
sudo chmod +x $REPO_ROOT/{{ item }}

{%- endfor %}
